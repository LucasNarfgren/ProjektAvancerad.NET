// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectAvancerat.NET.API.Model;

namespace ProjectAvancerat.NET.API.Migrations
{
    [DbContext(typeof(AvanceradDbContext))]
    [Migration("20220414094620_AddedPropertyin TimeReport")]
    partial class AddedPropertyinTimeReport
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjektAvancerad.NET.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CompanyName = "Qlok",
                            CustomerEmail = "Tobias@Qlok.se",
                            CustomerName = "Tobias",
                            CustomerPhone = "0708090989"
                        },
                        new
                        {
                            CustomerId = 2,
                            CompanyName = "Qlok",
                            CustomerEmail = "Anas@Qlok.se",
                            CustomerName = "Anas",
                            CustomerPhone = "0907567623"
                        });
                });

            modelBuilder.Entity("ProjektAvancerad.NET.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Adress = "Hertings Allé 5A",
                            FirstName = "Lucas",
                            LastName = "Narfgren",
                            PhoneNumber = "0707409223",
                            Salary = 32300.00m
                        },
                        new
                        {
                            EmployeeId = 2,
                            Adress = "Kalles Väg 36",
                            FirstName = "Johhny",
                            LastName = "Karlsson",
                            PhoneNumber = "0709804567",
                            Salary = 38500.00m
                        },
                        new
                        {
                            EmployeeId = 3,
                            Adress = "Stor Gatan 13",
                            FirstName = "Felix",
                            LastName = "Jönsson",
                            PhoneNumber = "0908458712",
                            Salary = 45500.00m
                        });
                });

            modelBuilder.Entity("ProjektAvancerad.NET.Models.EmployeeProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            ProjectId = 2
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 3,
                            ProjectId = 2
                        });
                });

            modelBuilder.Entity("ProjektAvancerad.NET.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Completed")
                        .HasColumnType("bit");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("EstimatedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ProjectEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<DateTime>("ProjectStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Completed = false,
                            CustomerId = 1,
                            EstimatedPrice = 10000.00m,
                            ProjectDescription = "Skapa en application för tidsrapportering.",
                            ProjectEndDate = new DateTime(2022, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Avancerad.NET Projekt",
                            ProjectStartDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 2,
                            Completed = true,
                            CustomerId = 2,
                            EstimatedPrice = 25000.00m,
                            ProjectDescription = "Skapa ett simpelt spel för försäljning.",
                            ProjectEndDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Spel Projekt",
                            ProjectStartDate = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ProjektAvancerad.NET.Models.TimeReport", b =>
                {
                    b.Property<int>("TimeReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("WorkTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("week")
                        .HasColumnType("int");

                    b.HasKey("TimeReportId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Timereports");

                    b.HasData(
                        new
                        {
                            TimeReportId = 1,
                            DateOfRegistration = new DateTime(2022, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Börjat skapa en grund för applicationen",
                            EmployeeId = 1,
                            ProjectId = 1,
                            WorkTime = 8.5m,
                            week = 0
                        },
                        new
                        {
                            TimeReportId = 2,
                            DateOfRegistration = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Börjat med projektet i form av planering",
                            EmployeeId = 2,
                            ProjectId = 2,
                            WorkTime = 4.5m,
                            week = 0
                        },
                        new
                        {
                            TimeReportId = 3,
                            DateOfRegistration = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Börjat med projektet i form av planering",
                            EmployeeId = 3,
                            ProjectId = 2,
                            WorkTime = 4.5m,
                            week = 0
                        },
                        new
                        {
                            TimeReportId = 4,
                            DateOfRegistration = new DateTime(2022, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Börjat skapa en grund för Spelet",
                            EmployeeId = 3,
                            ProjectId = 2,
                            WorkTime = 8.0m,
                            week = 0
                        });
                });

            modelBuilder.Entity("ProjektAvancerad.NET.Models.Employee", b =>
                {
                    b.HasOne("ProjektAvancerad.NET.Models.Project", null)
                        .WithMany("_Employees")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("ProjektAvancerad.NET.Models.EmployeeProject", b =>
                {
                    b.HasOne("ProjektAvancerad.NET.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektAvancerad.NET.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjektAvancerad.NET.Models.Project", b =>
                {
                    b.HasOne("ProjektAvancerad.NET.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjektAvancerad.NET.Models.TimeReport", b =>
                {
                    b.HasOne("ProjektAvancerad.NET.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektAvancerad.NET.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
